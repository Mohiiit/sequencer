[package]
name = "starknet_mempool_p2p"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
async-trait.workspace = true
futures.workspace = true
papyrus_config.workspace = true
papyrus_network.workspace = true
papyrus_protobuf.workspace = true
serde.workspace = true
starknet_api.workspace = true
starknet_gateway_types.workspace = true
starknet_mempool_p2p_types.workspace = true
starknet_sequencer_infra.workspace = true
tokio.workspace = true
tracing.workspace = true
validator.workspace = true

[dev-dependencies]
futures.workspace = true
libp2p.workspace = true
<<<<<<< HEAD
mockall.workspace = true
papyrus_network = { workspace = true, features = ["testing"] }
papyrus_network_types = { workspace = true, features = ["testing"] }
papyrus_protobuf.workspace = true
papyrus_test_utils.workspace = true
||||||| e779088d2
papyrus_network = { workspace = true, features = ["testing"] }
papyrus_network_types = { workspace = true, features = ["testing"] }
papyrus_protobuf.workspace = true
papyrus_test_utils.workspace = true
=======
papyrus_network = { path = "../papyrus_network", features = ["testing"] }
papyrus_network_types = { path = "../papyrus_network_types", features = ["testing"] }
papyrus_protobuf.path = "../papyrus_protobuf"
papyrus_test_utils.path = "../papyrus_test_utils"
>>>>>>> origin/main-v0.13.4
rand_chacha.workspace = true
<<<<<<< HEAD
starknet_api.workspace = true
starknet_gateway_types = { workspace = true, features = ["testing"] }
||||||| e779088d2
starknet_api.workspace = true
=======
starknet_api.path = "../starknet_api"
>>>>>>> origin/main-v0.13.4
tokio = { workspace = true, features = ["full", "sync", "test-util"] }
